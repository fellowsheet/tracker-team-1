"""database creating

Revision ID: 8a5f91a7950e
Revises: 
Create Date: 2024-06-24 18:59:06.363001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8a5f91a7950e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('email', sa.String(length=60), nullable=False),
                    sa.Column('created_at', sa.Date(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('telegram_id')
                    )
    op.create_table('organizations',
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('created_at', sa.Date(), nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('teams',
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('created_at', sa.Date(), nullable=False),
                    sa.Column('organization_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('boards',
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('team_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('team_user_association',
                    sa.Column('team_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('team_id', 'user_id')
                    )
    op.create_table('tasks',
                    sa.Column('name', sa.String(length=60), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('status', sa.Enum('DONE', 'IN_REVIEW', 'IN_PROCESS', 'PENDING', name='status'), nullable=False),
                    sa.Column('priority', sa.Enum('HIGH', 'NORMAL', 'LOW', name='priority'), nullable=False),
                    sa.Column('deadline', sa.DateTime(), nullable=False),
                    sa.Column('created_at', sa.Date(), nullable=False),
                    sa.Column('board_id', sa.Integer(), nullable=False),
                    sa.Column('worker_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
                    sa.ForeignKeyConstraint(['worker_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('task_tag_association',
                    sa.Column('task_id', sa.Integer(), nullable=False),
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
                    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
                    sa.PrimaryKeyConstraint('task_id', 'tag_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_tag_association')
    op.drop_table('tasks')
    op.drop_table('team_user_association')
    op.drop_table('boards')
    op.drop_table('teams')
    op.drop_table('organizations')
    op.drop_table('users')
    op.drop_table('tags')
    # ### end Alembic commands ###
